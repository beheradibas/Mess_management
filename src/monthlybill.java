
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
public class monthlybill extends javax.swing.JFrame {

    /**
     * Creates new form monthlybill
     */
    public monthlybill() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Monthly Bill Finder");

        jLabel2.setText("Enter Monthnane:");

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("SEARCH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATE", "RICE", "DAL", "ATTA", "OIL", "SUGAR", "TEA", "SALT", "BESAN", "IDLYRAWA", "MAIDA", "JAGGERY", "DALDA", "MATCHBOX", "MEALMAKER", "BISCUITS", "EGGS", "PAPAD", "POTATOES", "BOOST", "LPG", "HALDIPOWDER", "CHILLIPOWDER", "GROUNDNUTS", "JEERA", "PHUTAN", "DALCHINI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(result);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jButton1)
                        .addGap(318, 318, 318)
                        .addComponent(jButton2)
                        .addGap(582, 582, 582)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String month=search.getText();
        DefaultTableModel model;
        model = (DefaultTableModel) result.getModel();
        try{
            Class.forName("java.sql.DriverManager");
            Connection  con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mess", "root","password");
            Statement alpesh =(Statement) con.createStatement();     
                       
           int row=model.getRowCount();
        if(row>0){
            for(int i=0;i<row;i++){
                model.removeRow(0);
            }
        }

            String query ="SELECT * FROM dailybill where monthname(date) = '"+month+"';";
            ResultSet rs =alpesh.executeQuery(query);
            while(rs.next()){
                String date =rs.getString("date");
                int rice=rs.getInt("rice");
                int dal=rs.getInt("dal");
                int Atta=rs.getInt("atta");
                int Oil=rs.getInt("oil");
                int Sugar=rs.getInt("sugar");
                int Tea=rs.getInt("tea");
                int Salt=rs.getInt("salt");
                int Besan=rs.getInt("besan");

                int Idlyrawa=rs.getInt("idlyrawa");
                int Maida=rs.getInt("maida");
                int Jaggery=rs.getInt("jaggery");
                int Dalda=rs.getInt("dalda");
                int Matchbox=rs.getInt("matchbox");
                int Mealmaker=rs.getInt("mealmaker");
                int Biscuits=rs.getInt("biscuits");

                int Eggs=rs.getInt("eggs");
                int Papad=rs.getInt("papad");
                int Potatoes=rs.getInt("potatoes");
                int Boost=rs.getInt("boost");
                int Lpg=rs.getInt("lpg");

                int Haldipowder=rs.getInt("haldipowder");
                int Chillipowder=rs.getInt("chillipowder");
                int Groundnuts=rs.getInt("groundnuts");
                int Jeera=rs.getInt("jeera");
                int Phutan=rs.getInt("phutan");
                int Dalchini=rs.getInt("dalchini");
                model.addRow(new Object[]{date,rice,dal,Atta,Oil,Sugar,Tea,Salt,Besan,Idlyrawa,Maida,Jaggery,Dalda,Matchbox,Mealmaker,Biscuits,Eggs,Papad,Potatoes,Boost,Lpg,Haldipowder,
                    Chillipowder,Groundnuts,Jeera,Phutan,Dalchini});
        }
        }
        catch(Exception e){

            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.show(false);
        new BILLING().show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model;
        model = (DefaultTableModel) result.getModel();int row=model.getRowCount();
        if(row>0){
            for(int i=0;i<row;i++){
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String month=search.getText();
        DefaultTableModel model;
        model = (DefaultTableModel) result.getModel();
        try{
            Class.forName("java.sql.DriverManager");
            Connection  con =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mess", "root","password");
            Statement alpesh =(Statement) con.createStatement();     
                       
           int row=model.getRowCount();
        if(row>0){
            for(int i=0;i<row;i++){
                model.removeRow(0);
            }
        }

            String query ="SELECT * FROM dailybill where monthname(date) = '"+month+"';";
            ResultSet rs =alpesh.executeQuery(query);
            while(rs.next()){
                String date =rs.getString("date");
                int rice=rs.getInt("rice");
                int dal=rs.getInt("dal");
                int Atta=rs.getInt("atta");
                int Oil=rs.getInt("oil");
                int Sugar=rs.getInt("sugar");
                int Tea=rs.getInt("tea");
                int Salt=rs.getInt("salt");
                int Besan=rs.getInt("besan");

                int Idlyrawa=rs.getInt("idlyrawa");
                int Maida=rs.getInt("maida");
                int Jaggery=rs.getInt("jaggery");
                int Dalda=rs.getInt("dalda");
                int Matchbox=rs.getInt("matchbox");
                int Mealmaker=rs.getInt("mealmaker");
                int Biscuits=rs.getInt("biscuits");

                int Eggs=rs.getInt("eggs");
                int Papad=rs.getInt("papad");
                int Potatoes=rs.getInt("potatoes");
                int Boost=rs.getInt("boost");
                int Lpg=rs.getInt("lpg");

                int Haldipowder=rs.getInt("haldipowder");
                int Chillipowder=rs.getInt("chillipowder");
                int Groundnuts=rs.getInt("groundnuts");
                int Jeera=rs.getInt("jeera");
                int Phutan=rs.getInt("phutan");
                int Dalchini=rs.getInt("dalchini");
                model.addRow(new Object[]{date,rice,dal,Atta,Oil,Sugar,Tea,Salt,Besan,Idlyrawa,Maida,Jaggery,Dalda,Matchbox,Mealmaker,Biscuits,Eggs,Papad,Potatoes,Boost,Lpg,Haldipowder,
                    Chillipowder,Groundnuts,Jeera,Phutan,Dalchini});
        }
        }
        catch(Exception e){

            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(monthlybill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(monthlybill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(monthlybill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(monthlybill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new monthlybill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable result;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
